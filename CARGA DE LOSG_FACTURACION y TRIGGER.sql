-- ===============================================
-- TABLA PARA LOGS DE FACTURACI√ìN
-- ===============================================
-- RESUMEN - LA TABLA SIRVE PARA:
-- ‚úÖ Auditor√≠a completa - Saber qu√© pas√≥ en cada facturaci√≥n
-- ‚úÖ Control de errores - Identificar problemas r√°pidamente
-- ‚úÖ An√°lisis de rendimiento - Ver tendencias y patrones
-- ‚úÖ Alertas autom√°ticas - Detectar anomal√≠as
-- ‚úÖ Reportes gerenciales - Dashboard para administradores
-- ‚úÖ Debugging - Investigar problemas espec√≠ficos
-- ‚úÖ Compliance - Cumplir auditor√≠as y regulaciones

-- üéØ EN POCAS PALABRAS:
-- Es como el "historial cl√≠nico" del sistema de facturaci√≥n:

-- üìÖ Cu√°ndo se ejecut√≥
-- üìä Cu√°ntas facturas se generaron
-- üí∞ Cu√°nto dinero se factur√≥
-- ‚úÖ Si fue exitoso o tuvo errores
-- üîç Qu√© errores ocurrieron


CREATE TABLE logs_facturacion (
    id INT IDENTITY(1,1) PRIMARY KEY,
    fecha_proceso DATE NOT NULL,
    facturas_generadas INT DEFAULT 0,
    total_facturado DECIMAL(15,2) DEFAULT 0,
    estado VARCHAR(20) NOT NULL, -- 'completado', 'error', 'parcial'
    error_mensaje TEXT NULL,
    created_at DATETIME DEFAULT GETDATE()
);

PRINT '‚úÖ Tabla logs_facturacion creada';

-- ===============================================
-- TRIGGER PARA ACTUALIZAR FECHA √öLTIMA FACTURACI√ìN
-- ===============================================

-- ===============================================
-- PASO 1: AGREGAR COLUMNA A TABLA CONTRATOS
-- ===============================================

-- Verificar si la columna ya existe antes de agregarla
IF NOT EXISTS (
    SELECT * FROM sys.columns 
    WHERE object_id = OBJECT_ID('contratos') 
        AND name = 'ultima_facturacion'
)
BEGIN
    ALTER TABLE contratos ADD ultima_facturacion DATE NULL;
    PRINT '‚úÖ Columna ultima_facturacion agregada a tabla contratos';
END
ELSE
BEGIN
    PRINT '‚ö†Ô∏è La columna ultima_facturacion ya existe en tabla contratos';
END
GO